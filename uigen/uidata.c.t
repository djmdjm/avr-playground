{{/* Template file for UI definitions*/}}

/* This file is generated by uigen; DO NOT EDIT */

#include <stddef.h>
#include <stdint.h>

struct menu;

struct editable_item {
	const char *label;	/* NULL if integer range */
	int value;
}

struct editable {
	const char *display;
	int *variable;
	size_t n;
	const struct editable_item *items[];
	int range_lo, range_hi;	/* If no integer range, then hi<lo */
};

struct ask_item {
	const char *label;
	void (*action)(void);	/* NULL to return to previous menu */
};

struct ask {
	const char *display;
	size_t n;
	const struct ask_item *items[];
};

struct menu_item {
	const char *label;
	enum { M_EDITABLE, M_ASK, M_SUBMENU } mi_type;
	union {
		struct editable *editable;
		struct ask *ask;
		struct menu *submenu;
	} item;
};

struct menu {
	size_t n;
	struct menu_item *items[];
};

/* Forward declaration of menus */
{{range .Menus}}struct menu {{.Name}};
{{end}}

{{range .Menus}}
/* {{if .Name}}Menu "{{.Name}}"{{else}}Root menu{{end}} */

{{range .Editables}}{{if .Items}}
enum {
{{range .Items}}	{{.Value}},
{{end}}
};
{{end}}{{range .Items}}struct editable_item {{.Name}} = { "{{.Label}}", {{.Value}} };
{{end}}

struct editable {{.Name}} = {
	"{{.Display}}",
	&{{.Variable}},
	{{len .Items}},
	{ {{range .Items}}&{{.Name}}, {{end}} },
	{{if .HasRange}}{{.RangeLow}}, {{.RangeHi}},
	{{else}}0, -1 /* no integer range */
	{{end}}
};
{{end}}

{{range .Asks}}
{{range .Items}}{{if .Action}}void {{.Action}}(void);
{{end}}
{{end}}
{{range .Items}}struct ask_item {{.Name}} = { "{{.Label}}", {{if .Action}}{{.Action}}{{else}}NULL{{end}} };
{{end}}

struct ask {{.Name}} = {
	"{{.Display}}",
	{{len .Items}},
	{
{{range .Items}}	&{{.Name}},
{{end}}	}
};
{{end}}

{{range .Items}}struct menu_item {{.Name}} = {
	.label = "{{.Label}}",
{{if eq .Type "editable"}}	.mi_type = M_EDITABLE,
	.item = { .editable = &{{.Name}} },
{{else if eq .Type "ask"}}	.mi_type = M_ASK,
	.item = { .ask = &{{.Name}} }
{{else if eq .Type "submenu"}}	.mi_type = M_SUBMENU,
	.item = { .submenu = &{{.Name}} }
{{else}}#error unknown menu item type "{{.Type}}"
{{end}}
}
{{end}}

struct menu {{.Name}} = {
	{{len .Items}},
	{
{{range .Items}}	&{{.Name}},
{{end}}	}
};

{{end}}

