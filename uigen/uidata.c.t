{{/* Template file for UI definitions*/}}

/* This file is generated by uigen; DO NOT EDIT */

#include <stddef.h>
#include <stdint.h>

struct menu;

struct editable_item {
	const char *label;	/* NULL if integer range */
	int value;
};

struct editable {
	const char *display;
	int *variable;
	size_t n;
	const struct editable_item *items;
	int range_lo, range_hi;	/* If no integer range, then hi<lo */
};

struct ask_item {
	const char *label;
	void (*action)(void);	/* NULL to return to previous menu */
};

struct ask {
	const char *display;
	size_t n;
	const struct ask_item *items;
};

struct menu_item {
	const char *label;
	enum { M_EDITABLE, M_ASK, M_SUBMENU } mi_type;
	union {
		struct editable *editable;
		struct ask *ask;
		struct menu *submenu;
	} item;
};

struct menu {
	size_t n;
	struct menu_item *items;
};

/* XXX */
enum XXX {
CH_EVENT_NOTE, CH_EVENT_BEND, CH_EVENT_MODWHEEL, CH_EVENT_VELOCITY,
CH_EVENT_CHANNEL_TOUCH, MIDI_OMNI, CH_RANGE_FULL, CH_RANGE_HALF,
CH_RANGE_FULL_POS, CH_RANGE_HALF_POS, CH_RANGE_FULL_NEG, CH_RANGE_HALF_NEG,
POLY_LAST, POLY_FIRST, POLY_LOWEST, POLY_HIGHEST, POLY_RANDOM
};

/* Forward declaration of menus */
{{range .Menus}}struct menu {{.Name}};
{{end}}
{{range .Menus}}/* {{if eq .Name "root"}}Root menu{{else}}Menu "{{.Name}}"{{end}} */

{{range .Editables}}
{{if .Items}}
struct editable_item {{.Name}}_items[] = {
{{range .Items}}	{ "{{.Label}}", {{.Definition}} },
{{end}}};{{end}}

struct editable {{.Name}} = {
	"{{.Label}}",
	NULL, /* XXX variable */
	{{len .Items}},
	{{if .Items}}{{.Name}}_items{{else}}NULL{{end}},
	{{if .HasRange}}{{.RangeLow}}, {{.RangeHi}},
	{{else}}0, -1 /* no integer range */
	{{end}}
};
{{end}}
{{range .Asks}}

{{if .Items}}
{{range .Items}}{{if .Action}}void {{.Action}}(void);
{{end}}{{end}}
struct ask_item {{.Name}}_items[] = {
{{range .Items}}	{ "{{.Label}}", {{if .Action}}{{.Action}}{{else}}NULL{{end}} },
{{end}}};
{{end}}
struct ask {{.Name}} = {
	"{{.Label}}",
	{{len .Items}},
	{{if .Items}}{{.Name}}_items{{else}}NULL{{end}},
};
{{end}}

struct menu_item {{.Name}}_items[] = {
{{range .Items}}	{
		.label = "{{.Label}}",
{{if eq .Type "editable"}}		.mi_type = M_EDITABLE,
		.item = { .editable = &{{.Name}} },
{{else if eq .Type "ask"}}		.mi_type = M_ASK,
		.item = { .ask = &{{.Name}} }
{{else if eq .Type "submenu"}}		.mi_type = M_SUBMENU,
		.item = { .submenu = &{{.Name}} }
{{else}}#error unknown menu item type "{{.Type}}"
{{end}}
	},
{{end}}
};

struct menu {{.Name}} = { {{len .Items}}, {{.Name}}_items};

{{end}}

